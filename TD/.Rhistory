?sample
?set.seed
?replicate
n<-5
alpha<-6
nb_tirages<-1000
PXn<-function(n){
p1<-1-1/n**2
p2<-1/n**2
sample(c(1/n,n),size=n,prob=c(p1,p2))
}
set.seed(123)
tirage<-replicate(nb_tirages,PXn(n))
PXn<-function(n){
p1<-1-1/n**2
p2<-1/n**2
sample(c(1/n,n),size=n,prob=c(p1,p2),replace=TRUE)
}
set.seed(123)
tirage<-replicate(nb_tirages,PXn(n))
head(tirages)
n<-5
head(tirage)
tirage
tirage
hist(tirage)
?hist
hist(tirage)
n_grand<-100
nb_tirages<-1000
tirage_grand<-replicate(nb_tirages,PXn(n_grand))
hist(tirage_grand)
?hist
hist(tirage_grand,col='red',add=TRUE)
hist(tirage,col='blue')
hist(tirage_grand,col='red',add=TRUE)
hist(tirage,col='blue',add=TRUE)
hist(tirage_grand,col='red',add=TRUE)
hist(tirage_grand,col='red')
hist(tirage,col='blue',add=TRUE)
?sample
unlist(tirage)
tirage[3]
tirage[0]
tirage[1]
1:n
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:nb_tirages){
ifelse(X[i]==1/n,
n1=n1+1,
n2=n2+1)
return(c(n1/n,n2/n))
}
}
mesure(tirage,n)
ifelse(X[i]==1/n**2,
n1=n1+1,
n2=n2+1)
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:nb_tirages){
ifelse(X[i]==1/n**2,
n1=n1+1,
n2=n2+1)
return(c(n1/n,n2/n))
}
}
mesure(tirage,n)
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:nb_tirages){
ifelse(X[i]==1/n**2,
n1=n1+1,
n2=n2+1)
}
return(c(n1/n,n2/n))
}
mesure(tirage,n)
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:nb_tirages){
ifelse(X[i]==1/n,
n1=n1+1,
n2=n2+1)
}
return(c(n1/n,n2/n))
}
mesure(tirage,n)
tirages
tirage
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:length(X)){
ifelse(X[i]==1/n,
n1=n1+1,
n2=n2+1)
}
return(c(n1/n,n2/n))
}
mesure(tirage,n)
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
for(i in 1:length(X)){
if(X[i]==1/n){
n1=n1+1
}
else{
n2=n2+1
}
}
return(c(n1/n,n2/n))
}
mesure(tirage,n)
#mesurons la loi vers laquelle elle converge, de manière empirique
mesure<-function(X,n){
n1=0
n2=0
size<-length(X)
for(i in 1:size){
if(X[i]==1/n){
n1=n1+1
}
else{
n2=n2+1
}
}
return(c(n1/size,n2/size))
}
mesure(tirage,n)
mesure(tirage_grand,n)
mesure(tirage_grand,n_grand)
PXi<-function(n){
p<-c(1/3,2/3)
sample(c(1,0),size=n,prob=p,replace=TRUE)
}
tirage2<-replicate(nb_tirages,PXi(n))
tirage2_grand<-replicate(nb_tirages,PXi(n_grand))
hist(tirage2_grand,col='red')
hist(tirage2,col='blue',add=TRUE)
tirage2
tirage2<-replicate(n,PXi(n))
tirage2_grand<-replicate(n_grand,PXi(n_grand))
hist(tirage2_grand,col='red')
hist(tirage2,col='blue',add=TRUE)
hist(tirage2,col='blue')
Xn_bar<-function(N){
tirage_bar<-replicate(N,PXi(N))
Y<-0
for(i in 1:N){
Y<-Y+tirage_bar[i]
}
return (Y/N)
}
Xn_bar(n)
Xn_bar(n_grand)
PXi<-function(n){
p<-c(1/3,2/3)
sample(c(1,0),size=n,prob=p,replace=TRUE)
}
tirage2<-replicate(n,PXi(n))
tirage2_grand<-replicate(n_grand,PXi(n_grand))
hist(tirage2_grand,col='red')
hist(tirage2,col='blue')
Xn_bar<-function(N){
tirage_bar<-replicate(N,PXi(N))
Y<-0
for(i in 1:N){
Y<-Y+tirage_bar[i]
}
return (Y/N)
}
Xn_bar(n)
Xn_bar(n_grand)
else{return(0)}
f<-function(x){
if(x>theta){
return(
exp(-(x-theta))
)
}
else{return(0)}
}
f_theta<-function(x){
if(x>theta){
return(
exp(-(x-theta))
)
}
else{return(0)}
}
set.seed(123)
?seq
X<-seq(from=0,to=100)
X
X<-seq(from=0,to=100,by=0.1)
X
obs<-F1(X,n)
#we are looking for X(1)=inf(X1,…,Xn)
#[…] after calculations, X(1) follow this probability :
F1<-function(x,n){
return(
1-(1-F_theta(x))**n
)
}
obs<-F1(X,n)
#we must chose theta>0
theta<-7
#we have X1…Xn following this density :
f_theta<-function(x){
if(x>theta){
return(
exp(-(x-theta))
)
}
else{return(0)}
}
#and after calculations , X1…Xn follow this probabilities :
F_theta(x){
#we are looking for X(1)=inf(X1,…,Xn)
#[…] after calculations, X(1) follow this probability :
F1<-function(x,n){
return(
1-(1-F_theta(x))**n
)
}
obs<-F1(X,n)
#and after calculations , X1…Xn follow this probabilities :
F_theta(x){
#and after calculations , X1…Xn follow this probabilities :
F_theta<-function(x){
if(x>theta){
return(
1-exp(-(x-theta))
)
}
else{return(0)}
}
#we are looking for X(1)=inf(X1,…,Xn)
#[…] after calculations, X(1) follow this probability :
F1<-function(x,n){
return(
1-(1-F_theta(x))**n
)
}
obs<-F1(X,n)
?sapply
obs<-sapply(X,F1)
obs<-sapply(X,F1(,n))
gc()
F1_n(x){
obs<-sapply(X,F1_n)
F1_n<-function(x){
return (F1(x,n))
}
obs<-sapply(X,F1_n)
curve(obs)
curve(F1)
plot(X,obs)
plot(X,obs,pch='+',col='blue')
FZn<-function(x,n){
return(
F1(theta+x/n,n)
)
}
FZn<-function(x,n){
return(
F1(theta+x/n,n)
)
}
FZn_n<-function(x){
return(FZn(x,n))
}
obsZ<-sapply(X,FZn)
obsZ<-sapply(X,FZn_n)
plot(X,obsZ,rch='+',col='blue')
plot(X,obsZ,pch='+',col='blue')
?rexp
plot(X,rexp(rate=1/sqrt(n),X),col='red',add=TRUE)
plot(X,obsZ,pch='+',col='blue')
plot(X,rexp(rate=1/sqrt(n),X),col='red',add=TRUE)
?rexp
plot(X,rexp(rate=1/sqrt(n),x=X),col='red',add=TRUE)
plot(X,rexp(rate=1/sqrt(n)),col='red',add=TRUE)
?rexp
plot(X,rexp(n,rate=1/sqrt(n)),col='red',add=TRUE)
obsExp<-sapply(X,pexp)
plot(X,obsZ,pch='+',col='blue')
plot(X,obsExp,pch='o',col='red',add=TRUE)
par(mfrow=c(1,2))
plot(X,obsZ,pch='+',col='blue')
plot(X,obsExp,pch='o',col='red')
par(mfrow=c(2,1))
plot(X,obsZ,pch='+',col='blue')
plot(X,obsExp,pch='o',col='red')
?plot
plot(X,obsZ,pch='+',col='blue',ylim=c(0,1))
?plot
F_theta5<-function(x){
if(x>=0 && x<=theta){
return(sqrt(x/theta))
}
else{return(0)}
}
F_hat_theta<-function(x){
obs5<-sapply(X,F_theta5)
obs5theta<-sapply(X,F_hat_theta)
obs5<-sapply(X,F_theta5)
obs5theta<-sapply(X,F_hat_theta)
F_hat_theta<-function(x){
return(F_theta5(x)**n)
}
obs5<-sapply(X,F_theta5)
obs5theta<-sapply(X,F_hat_theta)
F_hat_theta<-function(x){
return(F_theta5(x)**n)
}
obs5theta<-sapply(X,F_hat_theta)
plot(X,obs5,pch='o',col='blue')
plot(X,obs5theta,pch='+',col='red')
plot(X,obs5,pch='o',col='blue')
plot(X,obs5theta,pch='+',col='red')
par(mfrow=c(2,1))
plot(X,obs5,pch='o',col='blue')
plot(X,obs5theta,pch='+',col='red')
Xtheta<-seq(from=0,to=theta,by=0.1)
Xtheta<-seq(from=0,to=theta+1,by=0.1)
obs5<-sapply(Xtheta,F_theta5)
obs5theta<-sapply(Xtheta,F_hat_theta)
par(mfrow=c(2,1))
plot(Xtheta,obs5,pch='o',col='blue')
plot(Xtheta,obs5theta,pch='+',col='red')
f_theta7<-function(x){
if(x>-1 && x<1){
return(1/2*(1+theta7*x))
}
else{return(0)}
}
Xtheta7<-seq(from=-1.5,to=1.5,by=0.1)
obs7<-sapply(Xtheta7,f_theta7)
theta7<-0.5   #theta must be between -1 and 1
obs7<-sapply(Xtheta7,f_theta7)
plot(Xtheta7,obs7,pch='o',col='green')
par(mfrow=c(1,1))
plot(Xtheta7,obs7,pch='o',col='green')
Xtheta7<-seq(from=-1.5,to=1.5,by=0.01)
obs7<-sapply(Xtheta7,f_theta7)
par(mfrow=c(1,1))
plot(Xtheta7,obs7,pch='o',col='green')
