?read.table()
read.table(FRNOR.RR2021.PPDQ.data,header=TRUE)
read.table(~\Telechargemenbts\FRNOR.RR2021.PPDQ.data,header=TRUE)
library(evd)
install.packages("evd",dependencies=T)
library(evd)
read.table("FRNOR.RR2021.PPDQ.data",header=TRUE)
#on regarde où on est
getwd()
read.table("FRNOR.RR2021.PPDQ.data",header=TRUE)
#récupération des données
#! on a placé les données dans le même dossier que celui pour le projet
donnees<-read.table("FRNOR.RR2021.PPDQ.data",header=TRUE)
summary(donnees)
pluie<-donnees["RR"]
summary(pluie)
pluie
names(pluie)
#question 1
pluie0<-which(pluie==0)
mean(pluie0)/mean(pluie)
#question 1
pluie0<-which(pluie["RR"]==0)
mean(pluie0)/mean(pluie["RR"])
mean(pluie0["RR"])/mean(pluie["RR"])
pluie0
sum(pluie0)/mean(pluie["RR"])
length(pluie0)
#question 1
rm(pluie0)
length(pluie["RR"])
#question 1
pluie
#question 1
#on crée le vecteur des pluie non nulles
pluie1<-pluie[pluie>0]
pluie1
p1<-length(pluie1)/length(pluie)
p1
pluiee<-pluie["RR"]
plot(density(pluie1))
hist(pluie1,add=TRUE)
hist(pluie1,add=TRUE,prob=T,col="red")
plot(density(pluie1))
hist(pluie1,add=TRUE,prob=T,col="red")
pluie<-donnees$RR
summary(pluie)
pluie
names(pluie)
#question 1
#on crée le vecteur des pluie non nulles
pluie1<-pluie[pluie>0]
p1<-length(pluie1)/length(pluie)
p1
plot(density(pluie1))
p2<-1-p1
rm(pluiee)
sum(pluie1,rate=lambda,log=TRUE)
LVexp<-function(lambda){
sum(pluie1,rate=lambda,log=TRUE)
}
xx<-seq(0.01,2,length.out=100)
yy<-sapply(xx,LVexp)
plot(xx,yy)
sum(dexp(pluie1,rate=lambda,log=TRUE))
LVexp<-function(lambda){
sum(dexp(pluie1,rate=lambda,log=TRUE))
}
xx<-seq(0.01,2,length.out=100)
yy<-sapply(xx,LVexp)
plot(xx,yy)
plot(xx,yy,xaxs="i",yaxs="i",pch="+")
help(plot)
plot(xx,yy,xaxs="i",yaxs="i",pch="+",
main="courbe de la log vraisemblance")
abline(v=1/mean(pluie1),add=TRUE)
help(plot)
xx
yy
LVWei<-function(X){
k<-X[1]
lambda<-X[2]
sum(dweibull(pluie1,shape=k,scale=lambda,log=TRUE))
}
LVFre<-function(X){
alpha=X[1]
s=X[2]
sum(dfrechet(pluie1,shape=alpha,scale=s,log=TRUE))
}
plot(LVWei(xx))
?optim
emv_fre<-optim(c(0.5,0.5), LVWei , control=list(fnscale=-1))
emv_fre<-optim(c(0.5,0.5), LVFre , control=list(fnscale=-1))
emv_fre
emv_wei<-optim(c(0.5,0.5), LVWei , control=list(fnscale=-1))
emv_fre<-optim(c(0.5,0.5), LVFre , control=list(fnscale=-1))
emv_fre
emv_wei
init_vec<-c(mean(pluie1)**2/var(pluie1),var(pluie1)/mean(pluie1))
init_vec
emv_gam<-optim(init_vec,LVGam,control=list(fnscale=-1,trace=4))
LVGam<-function(X){
sum(dgamme(pluie1,shape=X[1],scale=X[2],log=TRUE))
}
init_vec<-c(mean(pluie1)**2/var(pluie1),var(pluie1)/mean(pluie1))
init_vec
emv_gam<-optim(init_vec,LVGam,control=list(fnscale=-1,trace=4))
LVGam<-function(X){
sum(dgamma(pluie1,shape=X[1],scale=X[2],log=TRUE))
}
init_vec<-c(mean(pluie1)**2/var(pluie1),var(pluie1)/mean(pluie1))
init_vec
emv_gam<-optim(init_vec,LVGam,control=list(fnscale=-1,trace=4))
?dnorm
$\frac{2}{3}
?t.t.test
?t.t.test()
?t.test.formula
t.test(pluie)
?rnorm
Xer <- rnorm(1000,0,1)
Xer
summary(Xer)
t.test(Xer)
Xer2<-Xer-MXer
MXer<-mean(Xer)
Xer2<-Xer-MXer
XerZ[1]
Xer2[1]
Xer[1]-MXer
SXer<-mean(Xer2)
?t.test()
